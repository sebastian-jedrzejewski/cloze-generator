version: "3.8"
services:
  backend:
    command: >
      sh -c
      "python manage.py collectstatic --noinput && 
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    build: ./backend
    stdin_open: true
    tty: true
    volumes:
      - ./backend/:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
      - celery
    networks:
      - cloze-generator-network
  db:
    image: postgres:15.4-alpine
    env_file:
      - ./backend/.env
    volumes:
      - data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cloze-generator-network
  redis:
    image: redis:7.0.5-alpine
    env_file:
      - ./backend/.env
    volumes:
      - redis:/data
    networks:
      - cloze-generator-network
  celery_beat:
    build: ./backend
    command: celery -A cloze_generator beat --pool threads -l info
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    networks:
      - cloze-generator-network
  celery:
    build: ./backend
    command: celery -A cloze_generator worker --pool threads -l info
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - celery_beat
    networks:
      - cloze-generator-network
  frontend:
    build: ./frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/:/app
      - node_modules:/app/node_modules
    ports:
      - "5173:5173"
    environment:
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      - backend
    networks:
      - cloze-generator-network

volumes:
  data:
  node_modules:
  redis:
networks:
  cloze-generator-network: